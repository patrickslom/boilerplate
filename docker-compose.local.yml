services:
  traefik:
    image: traefik:v3.0
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --api.dashboard=true
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [stack]

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [stack]

  backend:
    build: ./backend
    environment:
      PORT: "3000"
      DATABASE_URL: postgres://app:app@db:5432/app
    depends_on: [db]
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`backend.localhost`)
      - traefik.http.routers.backend.entrypoints=web
      - traefik.http.services.backend.loadbalancer.server.port=3000
    networks: [stack]

  frontend:
    build: ./frontend
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`frontend.localhost`)
      - traefik.http.routers.frontend.entrypoints=web
      - traefik.http.services.frontend.loadbalancer.server.port=80
    networks: [stack]

volumes:
  pgdata:

networks:
  stack:
